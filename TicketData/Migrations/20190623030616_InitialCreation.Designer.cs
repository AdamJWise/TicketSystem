// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketData;

namespace TicketData.Migrations
{
    [DbContext(typeof(TicketSystemDbContext))]
    [Migration("20190623030616_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("TicketData.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Rank");

                    b.Property<int?>("SeatClaimId");

                    b.Property<string>("SeatNum");

                    b.Property<string>("SeatRow");

                    b.HasKey("SeatId");

                    b.HasIndex("SeatClaimId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("TicketData.SeatClaim", b =>
                {
                    b.Property<int>("SeatClaimId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int>("HoldId");

                    b.Property<DateTime?>("TimeStampHeld");

                    b.Property<DateTime?>("TimeStampReserved");

                    b.HasKey("SeatClaimId");

                    b.ToTable("SeatClaims");
                });

            modelBuilder.Entity("TicketData.Seat", b =>
                {
                    b.HasOne("TicketData.SeatClaim", "SeatClaim")
                        .WithMany("Seats")
                        .HasForeignKey("SeatClaimId");
                });
#pragma warning restore 612, 618
        }
    }
}
